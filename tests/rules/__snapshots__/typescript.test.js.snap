// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typescript.js should create default configuration 1`] = `
Object {
  "overrides": Array [
    Object {
      "files": Array [
        "**/*.ts?(x)",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "project": "mock-tsconfig-path",
      },
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/naming-convention": Array [
          "error",
          Object {
            "format": Array [
              "camelCase",
            ],
            "selector": "default",
          },
          Object {
            "format": Array [
              "camelCase",
              "UPPER_CASE",
            ],
            "selector": "variable",
          },
          Object {
            "format": Array [
              "camelCase",
            ],
            "leadingUnderscore": "allow",
            "selector": "parameter",
          },
          Object {
            "format": Array [
              "camelCase",
            ],
            "leadingUnderscore": "require",
            "modifiers": Array [
              "private",
            ],
            "selector": "memberLike",
          },
          Object {
            "format": Array [
              "PascalCase",
            ],
            "selector": "typeLike",
          },
          Object {
            "format": Array [
              "PascalCase",
            ],
            "prefix": Array [
              "is",
              "should",
              "has",
              "can",
              "did",
              "will",
            ],
            "selector": "variable",
            "types": Array [
              "boolean",
            ],
          },
          Object {
            "format": Array [
              "camelCase",
              "UPPER_CASE",
            ],
            "selector": "variable",
          },
          Object {
            "custom": Object {
              "match": false,
              "regex": "^I[A-Z]",
            },
            "format": Array [
              "PascalCase",
            ],
            "selector": "interface",
          },
        ],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "camelcase": "off",
        "constructor-super": "off",
        "getter-return": "off",
        "import/named": "off",
        "no-array-constructor": "off",
        "no-const-assign": "off",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-empty-function": "off",
        "no-extra-semi": "off",
        "no-func-assign": "off",
        "no-import-assign": "off",
        "no-new-symbol": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-this-before-super": "off",
        "no-undef": "off",
        "no-unreachable": "off",
        "no-unsafe-negation": "off",
        "no-unused-vars": "off",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "require-await": "off",
        "valid-typeof": "off",
      },
      "settings": Object {
        "import/external-module-folders": Array [
          "node_modules",
          "node_modules/@types",
        ],
        "import/parsers": Object {
          "@typescript-eslint/parser": Array [
            ".ts",
            ".tsx",
            ".d.ts",
          ],
        },
      },
    },
  ],
}
`;
